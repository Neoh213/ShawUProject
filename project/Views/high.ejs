<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
  <link rel = "stylesheet" href = "app.css">
<!--NAVBAR-->
<nav class="navbar navbar-inverse">
  <div class="container-fluid">
    <div class="navbar-header">
      <a class="navbar-brand" href="/">Shaw U Decibel Reader</a>
    </div>
    <ul class="nav navbar-nav">
      <li class="active"><a href="#">Home</a></li>
      <li><a href="/storeInfo">Store Information Graphs</a></li>
      <li><a href="#">Weather</a></li>
      <li><a href="#">Page 3</a></li>
    </ul>
  </div>
</nav>


<div>

  <img src="/sound.jpg" alt="image of sound waves" class = "picture img">
</div>

<div>
  <h1 id="incremental"></h1>
</div>

<!--split into two rows with bootstrap-->

<!--<div class = "container push">
  <div class = "row">
    <div class = "col-sm-12 content" style="background-color:#872333;">
    <form method="POST" action = "/high">
  <select name="store">
    <option value="Legros and Sons">Legros and Sons</option>
    <option value="Hills, Lang and Maggio">Hills, Lang and Maggio</option>
    <option value="Wilkinson Group">Wilkinson Group</option>
    <option value="Harber - Bosco">Harber - Bosco</option>
  </select>
  <button class = "button" >Submit</button>
  </form>
  </div>
  </div>
</div> -->
<!--split into two rows with bootstrap-->

<!--<div class="container-fluid push2">
  <div class="row">
    <div class="col-sm-6" style="background-color:#872333;">
      <h1> Highest decibel reading for store was:   <strong> <%=sound_level%></strong>
       at:  <%=store%> on  <%=time%></h1>

    </div>

    <div class="col-sm-6" style="background-color:#872333;">
      <h1> Highest decibel reading for store was:   <strong> <%=sound_level%></strong>
       at:  <%=store%> on  <%=time%></h1>

       <h2>Sound test will go here: <%=reading%> </h2>
    </div>
  </div>
</div>

<div class="container-fluid push2">
  <div class="row">
    <div class="col-sm-12" style="background-color:#872333;"> -->



      <div id="graph" class="chart-container " style="position: relative; height:40vh width:80vw color:blue;">

      	<div>
      	<h1 id= "levelHeading"> Decibel Level: <span id ="soundLevel"></span></h1>
      </div>


      <canvas id="myChart" width="500" height="300">

      </canvas>
    </div>
  </div>
</div>
</div>


<!--Scripts-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script>/* When the user clicks on the button,
toggle between hiding and showing the dropdown content */

function myFunction() {
    document.getElementById("myDropdown").classList.toggle("show");
}

function filterFunction() {
    var input, filter, ul, li, a, i;
    input = document.getElementById("myInput");
    filter = input.value.toUpperCase();
    div = document.getElementById("myDropdown");
    a = div.getElementsByTagName("a");
    for (i = 0; i < a.length; i++) {
        if (a[i].innerHTML.toUpperCase().indexOf(filter) > -1) {
            a[i].style.display = "";
        } else {
            a[i].style.display = "none";
        }
    }
}

</script>

<script src="https://cdn.socket.io/socket.io-1.0.0.js"></script>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
<!-- Dynamic Graph-->
<script>


var ctx = document.getElementById("myChart");
document.getElementById("soundLevel").innerHTML = 0;

var myChart = new Chart(ctx, {
    type: 'horizontalBar',
    data: {
        datasets: [{
            data: [0],
            backgroundColor: 'rgba(247, 255, 15, 1)',
            borderColor: 'rgba(255, 255, 255, 1)',
            borderWidth: 1
        }]
    },
    options: {
      legend: {
           display: false
         },
      responsive: true,
      maintainAspectRatio: true,
        scales: {
            xAxes: [{
                ticks: {min:0,
											 max:100,
											 //stepSize:4,
                    beginAtZero:true
									}

            }]
        }


}
});
var readout = <%=reading%> ;
setTimeout(function() {
   addData(myChart, [], 0);
	 console.log(readout);
}, 2000);

function addData(chart, data, datasetIndex) {
   chart.data.datasets[datasetIndex].data = data;
   chart.update();
}


//working on getting the graph to update
var canvas= document.querySelector("canvas");
var test = "test";


/* this commented section is for debigging
function to increase the graph. Will change readout to machine readout
canvas.addEventListener("click", function() {
addData(myChart, [readout], 0);
if(readout >=100)
{
readout =100;
}
else{
	readout +=5;
}

document.getElementById("soundLevel").innerHTML = readout;

});

*/
//ValueChange might work

window.addEventListener("load", function() {
addData(myChart, [readout], 0);
if(readout >=100)
{
readout =100;
}
else{
//	readout +=5;
}
var from = 0;
var to = 100;

//create xhr object
var xhr = new XMLHttpRequest();

setInterval(function() {
  //document.getElementById("soundLevel").innerHTML = readout;
  //addData(myChart, [readout], 0);
  if (readout == to) {
    //clearInterval(timerId);
  }
  //see if I can make random numbers and get the graph to run for x seconds
// readout = Math.floor(Math.random() *100);
  //use this when hooking up to Pi.
//  readout = <%=reading%>
}, 500);

});

/*********************************************/

var x = 0
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function demo() {
  for(var i = 0; i<100; i++){
  $.get("/value",function(data){
  readout = data;
  addData(myChart, [readout], 0);
    document.getElementById("soundLevel").innerHTML = readout;

    })
      await sleep(500);
        };
}

demo();
/**********************************************/

/* just for debugging, remove in final build
canvas.addEventListener("mouseover", function() {
addData(myChart, [readout], 0);
if(readout <=0)
{
readout =0;
}
else {
	readout -=5;
}
document.getElementById("soundLevel").innerHTML = readout;


 });
*/




// for(var i = 0; i<30; i++)
// {
// 	number++;
// };

</script>
